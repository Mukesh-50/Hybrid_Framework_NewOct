<?xml version="1.0" encoding="UTF-8"?>
<testng-results total="2" passed="0" failed="0" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-08-23T15:40:55Z" name="Suite" finished-at="2022-08-23T15:40:56Z" duration-ms="162">
    <groups>
    </groups>
    <test started-at="2022-08-23T15:40:55Z" name="Test" finished-at="2022-08-23T15:40:56Z" duration-ms="162">
      <class name="testcases.hybridTestCases.AddUserWithReport1">
        <test-method is-config="true" signature="setupReport()[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:55Z" name="setupReport" finished-at="2022-08-23T21:10:55Z" duration-ms="284" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupReport -->
        <test-method is-config="true" signature="setup(java.lang.String)[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:55Z" name="setup" finished-at="2022-08-23T21:10:55Z" duration-ms="0" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[The driver executable does not exist: G:\Selenium\Chrome\chromedriver.exe]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: The driver executable does not exist: G:\Selenium\Chrome\chromedriver.exe
	at com.google.common.base.Preconditions.checkState(Preconditions.java:199)
	at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:121)
	at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:116)
	at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:32)
	at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:137)
	at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:296)
	at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:88)
	at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:116)
	at Pages.BaseClass.setup(BaseClass.java:58)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:178)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="addUserToApplication()[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:56Z" name="addUserToApplication" finished-at="2022-08-23T21:10:56Z" duration-ms="5" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- addUserToApplication -->
        <test-method is-config="true" signature="endTest(org.testng.ITestResult)[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:56Z" name="endTest" finished-at="2022-08-23T21:10:56Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method signature="searchUser()[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:56Z" name="searchUser" finished-at="2022-08-23T21:10:56Z" duration-ms="5" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchUser -->
        <test-method is-config="true" signature="endTest(org.testng.ITestResult)[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:56Z" name="endTest" finished-at="2022-08-23T21:10:56Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:56Z" name="tearDown" finished-at="2022-08-23T21:10:56Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:testcases.hybridTestCases.AddUserWithReport1@694abbdc]" started-at="2022-08-23T21:10:56Z" name="endReport" finished-at="2022-08-23T21:10:56Z" duration-ms="0" status="SKIP">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- testcases.hybridTestCases.AddUserWithReport1 -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
